<h2 id="adding-a-secret-to-an-application">Adding a secret to an application</h2><h3 id="overview">Overview</h3><p>The aim of this guide is to walkthrough the process of adding a secret (in this example for aws access-key credentials) to a previously deployed application in the Cloud Platform.</p>
<h3 id="prerequisites">Prerequisites</h3><p>This guide assumes the following:</p>

<ul>
<li>You have previously set up an env. See <a href="tasks.html#creating-a-cloud-platform-environment">Creating a Cloud Platform Environment</a></li>
<li>You have previously deployed your application. See <a href="tasks.html#deploying-a-39-hello-world-39-application-to-the-cloud-platform">Deploying an application to the Cloud-Platform</a></li>
<li>Check your deployment is running. See <a href="tasks.html#interacting-with-the-application">Interacting with the application</a></li>
</ul>
<h3 id="configuring-secrets">Configuring secrets</h3><p>The following is an example of encoding (configuring) aws access-key credentials in your deployment.
See <a href="https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables">kuberenetes using secrets as environment variables</a></p>
<p>for detailed information regarding providing base64 values in secret objects to Kuberenetes pods)</p>
<p>Create your AWS Credentials access key (making a note of the aws_access_key_id and aws_secret_access_key)</p>
<h4 id="base64-encode-your-secret-as-follows">base64-encode your secret as follows:</h4><p>In this example  aws_access_key_id is &lsquo;AKIAFTKSAW15HJLOGD&rsquo;. Issue the following command to base64-encode:</p>
<div class="highlight"><pre class="highlight plaintext"><code>echo -n 'AKIAFTKSAW15HJLOGD' | base64 -b0
</code></pre></div><p>This will return the encoded id &#39;QUtJQUZUS1NBVzE1SEpMT0dE&rsquo;</p>
<p>In this example the is aws_secret_access_key &#39;g8hjpmhvgfhk4547gfdshhjj&rsquo;. Issue the following command to base64-encode:</p>
<div class="highlight"><pre class="highlight plaintext"><code>echo -n 'QUtJQUZUS1NBVzE1SEpMT0dE' | base64 -b0
</code></pre></div><p>This will return the encoded secret &#39;UVV0SlFVWlVTMU5CVnpFMVNFcE1UMGRF&rsquo;</p>
<h3 id="creating-the-secret">Creating the secret</h3><p>Create a secrets.yaml file similar to:</p>
<div class="highlight"><pre class="highlight plaintext"><code>apiVersion: v1
kind: Secret
metadata:
  name: demosecret
type: Opaque
data:
  aws_access_key_id: QUtJQUZUS1NBVzE1SEpMT0dE
  aws_secret_access_key: UVV0SlFVWlVTMU5CVnpFMVNFcE1UMGRF
</code></pre></div><p>issue the following command:</p>
<div class="highlight"><pre class="highlight plaintext"><code>$ kubectl apply -f secrets.yaml
secret "demosecret" created
</code></pre></div><p>To see the secrets:</p>
<div class="highlight"><pre class="highlight plaintext"><code>$ kubectl get secrets
NAME                                          TYPE                                  DATA      AGE
calico-zebu-external-dns-token-pldjb          kubernetes.io/service-account-token   3         16d
dandy-bumblebee-nginx-ingress-token-bspl6     kubernetes.io/service-account-token   3         14d
default-token-hz7z7                           kubernetes.io/service-account-token   3         26d
demosecret                                    Opaque                                2         5d
</code></pre></div><p>Decoding the Secret
Secrets can be retrieved via the kubectl get secret command. For example, to retrieve the secret you created:</p>
<div class="highlight"><pre class="highlight plaintext"><code>$ kubectl get secret demosecret  -o yaml
apiVersion: v1
data:
  aws_access_key_id: dGVzdCBrZXk=
  aws_secret_access_key: dGVzdCBrZXk=
kind: Secret
metadata:
  creationTimestamp: 2018-05-15T12:24:33Z
  name: demosecret
</code></pre></div><p>Add the AWS_ACCESS_KEY_ID referencing &#39;aws_access_key_id&rsquo; and AWS_SECRET_ACCESS_KEY referencing &#39;aws_secret_access_key&rsquo; (as previously set) to the containers env in <code>deployment-files/deployment.yaml</code></p>
<div class="highlight"><pre class="highlight plaintext"><code>    spec:
      containers:
        - name: django-demo-container
          image: 754256621582.dkr.ecr.eu-west-2.amazonaws.com/cloud-platform-reference-app:django
          ports:
            - containerPort: 8000
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: demosecret
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: demosecret
                  key: aws_secret_access_key
</code></pre></div>