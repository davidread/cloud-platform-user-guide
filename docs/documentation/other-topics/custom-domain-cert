<h3 id="using-a-custom-domain">Using a custom domain</h3><h4 id="background">Background</h4><p>Every application running on Cloud Platform is able to use a hostname for their
HTTP endpoints, under a pre-defined domain. For example, on the <code>live-1</code>
cluster, this would be <code>*.apps.live-1.cloud-platform.service.justice.gov.uk</code>. As
long as it is defined on the <code>Ingress</code> resource, it works automatically, using a
wildcard TLS certificate.</p>
<p>However, most applications will typically need to be served on their own,
application-specific <code>gov.uk</code> hostname. These hostnames (or usually, entire domains)
are managed individually and there is a number of actions in order to set them
up for usage.</p>
<h4 id="setup">Setup</h4><p>Domains are managed inside DNS zones. You can read more about the structure of
the Domain Name System in this <a href="https://en.wikipedia.org/wiki/Domain_Name_System#Structure">page</a>. It is recommended
that applications use their own DNS zones, in order to aid with management and
provide better isolation.</p>
<h5 id="defining-the-dns-zone">Defining the DNS zone</h5><p>To create the zone, you simply need to define it as a resource in your
environment. Make sure to read <a href="https://ministryofjustice.github.io/technical-guidance/standards/naming-domains/#naming-domains">the guidance on naming domains</a>
first and follow the instructions to <a href="tasks.html#creating-a-route-53-hosted-zone">create the Route53 zone</a>.
To simplify management, we recommend that you only define a single zone, as part
of the resources for your production environment, if possible. You can still use
subdomains of that zone for different environments.</p>
<p>Once the zone is created, you will need to setup the necessary name server (NS)
records in the parent DNS zone, before you&rsquo;re able to use it. For more
information on how this delegation method works, you can read about authoritative
name servers in this <a href="https://en.wikipedia.org/wiki/Name_server#Authoritative_name_server">page</a>.</p>
<p>If your zone is for a subdomain of <code>service.justice.gov.uk</code> (eg.: <code>https://myapp.service.justice.gov.uk</code>),
the Cloud Platform team can help you set it up; please <a href="http://goo.gl/msfGiS">create a support ticket</a>.</p>
<p>For any other domains (including any subdomain of <code>gov.uk</code>, eg.: <code>https://myservice.gov.uk</code>),
you will need to contact the parent zone&rsquo;s administrators to set this up. If in
doubt, don&rsquo;t hesitate to get in touch with us in <code>#ask-cloud-platform</code>.</p>
<p>Please note, once you setup the NS records, you&rsquo;ll be delegating control of the
zone to the Cloud Platform. Hostnames used by your services (using <code>Ingresses</code>)
will be automatically managed by the cluster.</p>
<p>If you wish to create custom records in your zone you can do so by defining them
in the <a href="https://github.com/ministryofjustice/cloud-platform-environments/">environments repository</a> using the terraform
<a href="https://www.terraform.io/docs/providers/aws/r/route53_record.html"><code>aws_route53_record</code></a> resource.</p>
<h5 id="obtaining-a-certificate">Obtaining a certificate</h5>
<ol>
<li>Create the <code>Certificate</code> resource, filling in any placeholders with your
details. The <code>secretName</code> attribute defines the name of a <code>Secret</code> in your
namespace where the certificate and key material will be stored</li>
</ol>
<div class="highlight"><pre class="highlight plaintext"><code>   ---
   apiVersion: certmanager.k8s.io/v1alpha1
   kind: Certificate
   metadata:
     name: &lt;my-cert&gt;
     namespace: &lt;my-namespace&gt;
   spec:
     secretName: &lt;my-cert-secret&gt;
     issuerRef:
       name: letsencrypt-production
       kind: ClusterIssuer
     commonName: '&lt;hostname&gt;'
     acme:
       config:
       - domains:
         - '&lt;hostname&gt;'
         dns01:
           provider: route53-cloud-platform
</code></pre></div>
<ol>
<li>Make sure the certificate has been issued correctly, by checking its <code>Status</code>:</li>
</ol>
<div class="highlight"><pre class="highlight plaintext"><code>   $ kubectl describe certificate &lt;my-cert&gt;
</code></pre></div><p>The certificate status of type <code>&quot;Ready&quot;</code> should be <code>True</code>:</p>
<div class="highlight"><pre class="highlight plaintext"><code>   Status:
     Conditions:
       Last Transition Time:  2019-06-05T10:16:43Z
       Message:               Certificate is up to date and has not expired
       Reason:                Ready
       Status:                True
       Type:                  Ready
     Not After:               2019-09-03T09:16:42Z
   Events:
     Type    Reason         Age   From          Message
     ----    ------         ----  ----          -------
     Normal  Generated      3m    cert-manager  Generated new private key
     Normal  OrderCreated   3m    cert-manager  Created Order resource "&lt;my-cert&gt;-3189350212"
     Normal  OrderComplete  1m    cert-manager  Order "&lt;my-cert&gt;-3189350212" completed successfully
     Normal  CertIssued     1m    cert-manager  Certificate issued successfully
</code></pre></div><p>It generally takes but a few minutes for the certificate to be prepared and
   the events displayed should indicate if there is a problem or it simply needs
   more time. If you cannot obtain a certificate, please get in touch with us in
   <code>#ask-cloud-platform</code>.</p>

<ol>
<li>You will need to update your <code>Ingress</code> spec to include the new hostname.</li>
</ol>
<div class="highlight"><pre class="highlight plaintext"><code>     apiVersion: extensions/v1beta1
     kind: Ingress
     metadata:
       name: &lt;my-ingress&gt;
       namespace: &lt;my-namespace&gt;
     spec:
       tls:
       - hosts:
         - my-app.apps.live-1.cloud-platform.service.justice.gov.uk
   +   - hosts:
   +     - &lt;hostname&gt;
   +     secretName: &lt;my-cert-secret&gt;
       rules:
       - host: my-app.apps.live-1.cloud-platform.service.justice.gov.uk
         http:
           paths:
           - path: /
             backend:
               serviceName: &lt;my-svc&gt;
               servicePort: 80
   +   - host: &lt;hostname&gt;
   +     http:
   +       paths:
   +       - path: /
   +         backend:
   +           serviceName: &lt;my-svc&gt;
   +           servicePort: 80
</code></pre></div><p>Once you&rsquo;ve made the changes to your <code>Ingress</code>, the cluster (and more
specifically, <code>external-dns</code>) will update the necessary records defined in it.
This usually takes less than a minute before you are able to access your
endpoint. However, depending on the DNS name servers your workstation uses, you
might need to wait longer or try to &ldquo;flush&rdquo; your local DNS cache in order to
speed up the process. You should search online for the proper method to do so,
based on your operating system and/or browser.</p>
