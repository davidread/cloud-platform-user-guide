<h2 id="secrets-overview">Secrets overview</h2><p>We identify secrets as one of three kinds:
- user secrets
- system secrets
- application secrets</p>
<h3 id="user-secrets">User Secrets</h3><p>They are essentially any kind of secret that is owned by a specific user (eg. GitHub or AWS credentials). The user is responsible for securely managing these secrets, typically using a password manager and they should not be shared with other individuals or used in applications.</p>
<h3 id="system-secrets">System Secrets</h3><p>They are secrets used in system components, usually configured by someone who manages, configures or supports the system. For example, when setting up a CI pipeline, the credentials it uses to fetch the source code and push the produced artifacts to a repository are considered system secrets.</p>
<p>These should not be tied to an individual user but machine users should be employed. The responsibility of managing these secrets securely lies with the owner of the system.</p>
<h3 id="application-secrets">Application Secrets</h3><p>These are the secrets that the application requires at runtime. Some examples are: API keys for third-party services, keys that applications might use to communicate with each other, database credentials, cookie encryption keys and so on.</p>
<p>This kind of secrets falls under the shared responsibility model:</p>

<ul>
<li><p>the owners of the application are responsible for securely managing the secrets at rest (eg. using <a href="other-topics.html#git-crypt">git-crypt</a> to encrypt them alongside the source code) and also for managing access to the secrets once they&rsquo;ve been added to an environment,</p></li>
<li><p>the Cloud Platform team, on the other hand, is responsible for ensuring the secrets remain secure inside the environment.</p></li>
</ul>
