---
title: How to use `kubectl` to connect to the cluster
last_reviewed_on: 2021-10-11
review_in: 3 months
---

# <%= current_page.data.title %>

This is a guide to installing and configuring `kubectl`, the official command-line tool for Kubernetes.

`kubectl` is used to deploy and manage applications on Kubernetes. Cloud Platform users will often use it, in addition to the [Cloud Platform CLI](/documentation/getting-started/cloud-platform-cli.html).

After working through this guide you should be able to use kubectl to query and update all the kubernetes resources in your namespace(s) on the Cloud Platform.

## Installation

To install `kubectl`, please follow the official docs: [Install kubectl][kubectl-install].

### Kubectl version

Choose a kubectl version that is within one minor version difference of your cluster. For example, kubectl v1.20 should work with a Kubernetes cluster at v1.19, v1.20, and v1.21. (Although in practice there are rarely problems with even newer kubectl versions.)

You can check the current cluster versions here:

* [live-1 Kubernetes version](https://github.com/ministryofjustice/cloud-platform-infrastructure/blob/main/kops/live-1.yaml#L254)
* [live Kubernetes version](https://github.com/ministryofjustice/cloud-platform-infrastructure/blob/main/terraform/aws-accounts/cloud-platform-aws/vpc/eks/cluster.tf#L30)

During [migration to `live` cluster](/documentation/other-topics/migrate-to-live.html), or if you want to be able to switch between `live-1` and `live` cluster, use kubectl version `v1.19`

## Authentication

Next you'll need to ensure your GitHub user is in the right organization and team, and then do authentication.

### GitHub setup

The Cloud Platform uses GitHub for authentication and authorisation:

1. Your GitHub user must be a member of the [Ministry of Justice organisation](https://github.com/orgs/ministryofjustice/people). See: [MOJ Technical Guidance - Member of the MoJ organisation](https://technical-guidance.service.justice.gov.uk/documentation/standards/storing-source-code.html#member-of-the-moj-organisation) (Note: you can only join if your user has 2FA enabled and your `...@digital.justice.gov.uk` email address has been added to it)

2. Access to each Cloud Platform environment/namespace (e.g. `pvb-production`, `cla-staging`) is granted according to GitHub team membership (e.g. 'PVB' and 'CLA' teams). To check which team is authorized for a particular environment, look in the `00-namespace.yaml` e.g. [00-namespace.yaml](https://github.com/ministryofjustice/cloud-platform-environments/blob/main/namespaces/live.cloud-platform.service.justice.gov.uk/justicedata-test/00-namespace.yaml#L14)

### Get a kubeconfig file

You'll login to the cluster using GitHub, and it will provide you with a token file, which you'll save on your machine as `~/.kube/config`

For those interested in how it works: GitHub is being used as an OIDC provider. Once you've logged in to GitHub, it provides a token, which is a signed JWT containing your GitHub username and list of teams you're in. GitHub passes it to Auth0 (OIDC broker), which passes it to Cloud Platform's login/Kuberos app, which provides it to you in a 'kubeconfig' file, containing the cluster API URL and token. This kubeconfig will be used when you run kubectl, to authenticate with the Kubernetes cluster in Cloud Platform.

1. Browse to the login URL - choose the one corresponding to the cluster where your environment is:
   * `live` cluster: <https://login.live.cloud-platform.service.justice.gov.uk/>
   * `live-1` cluster: <https://login.cloud-platform.service.justice.gov.uk/>

2. Select 'Sign in with GitHub'. (This page is hosted by Auth0.com)

3. You're redirected to github.com and will need to login, if you've not done so already.

4. GitHub asks if 'MOJ Cloud Platforms Auth0' may access your GitHub user details. Select "Authorize".

    ![GitHub Authorize MoJ](/images/github-authorize-moj-new.png)

5. Auth0.com asks if 'live:kubernetes' app may access 'justice-cloud-platform account'. Select "Accept".

6. Select 'Download Config File'.

7. Move the downloaded file to `~/.kube/config`:

    ```bash
    mv kubecfg.yaml ~/.kube/config
    ```

    If you've already got a kubeconfig, you may want to replace it, or merge with it - see [Using multiple kubeconfigs](#using-multiple-kubeconfigs).

8. Minimize the permissions on the file:

    ```bash
    chmod 600 ~/.kube/config
    ```

9. Tell kubectl to use this config. Pick the cluster, the same as you selected in Step 1:
    * `live` cluster:

        ```bash
        kubectl config use-context live.cloud-platform.service.justice.gov.uk
        ```
    * `live-1` cluster:

        ```bash
        kubectl config use-context live-1.cloud-platform.service.justice.gov.uk
        ```

You should now be able to run `kubectl` commands. Try running `kubectl get namespaces` to list the namespaces in the cluster.

#### Troubleshooting: "current" context

If you see an error like this when executing `kubectl` commands:

```bash
The connection to the server localhost:8080 was refused
```

A common reason for this is that the "current" context has not been set. Check it by running:

```bash
kubectl config get-contexts
```

If current context is set correctly, you'll see a `*`, like this:

```bash
CURRENT   NAME                                         CLUSTER                                      AUTHINFO                 NAMESPACE
*         live.cloud-platform.service.justice.gov.uk   live.cloud-platform.service.justice.gov.uk   <your github e-mail>
```

If the `*` is missing, then you need to set the context with the `use-context` command mentioned above.

### Using multiple kubeconfigs

You can have two kubeconfig files, corresponding to different clusters, which is useful during [migration from live-1 to live][migrate-to-live]. This is a guide to being able to manage multiple kubeconfigs, so you can conveniently switch the cluster that kubectl connects to.

Essentially we will [merge the kubeconfigs into a single file][kubectl-merge], and use `kubectl config use-context` to switch between them.

1. Assuming you already have a kubeconfig for live-1, download another kubeconfig for live from [login.live.cloud-platform.service.justice.gov.uk][authenticate-to-live-cluster].

2. Move the kubeconfig to your .kube folder:

    ```bash
    mv ~/Downloads/kubecfg.yaml ~/.kube/config-live
    ```

3. Edit `~/.kube/config-live`, and change the username **in two places**, from `<firstname>.<lastname>@digital.justice.gov.uk` to `<firstname>.<lastname>@live`, as shown below:

    ```yaml
    contexts:
    - context:
        cluster: live.cloud-platform.service.justice.gov.uk
        user: <firstname>.<lastname>@live
    name: live.cloud-platform.service.justice.gov.uk
    current-context: ""
    kind: Config
    preferences: {}
    users:
    - name: <firstname>.<lastname>@live
    ```

    Explanation: If we don't rename the username, then the merge will overwrite one of the them and their token, which is different between the clusters.

4. Copy your existing live-1 credentials into a separate file:

    ```bash
    cp ~/.kube/config ~/.kube/config-live-1
    ```

5. Edit `~/.kube/config-live-1`, and change the username in two places, from `<firstname>.<lastname>@digital.justice.gov.uk` to `<firstname>.<lastname>@live-1`, as shown below:

    ```yaml
    contexts:
    - context:
        cluster: live-1.cloud-platform.service.justice.gov.uk
        user: <firstname>.<lastname>@live-1
    name: live-1.cloud-platform.service.justice.gov.uk
    current-context: ""
    kind: Config
    preferences: {}
    users:
    - name: <firstname>.<lastname>@live-1
    ```

6. [Merge][kubectl-merge] the two config files together into a new config file and replace your old config with the new merged config:

    ```bash
    KUBECONFIG=~/.kube/config-live-1:~/.kube/config-live kubectl config view --flatten > /tmp/config && mv /tmp/config ~/.kube/config
    ```

Now using the single config file, you can switch between live-1 and live context

For live-1:

```bash
kubectl config use-context live-1.cloud-platform.service.justice.gov.uk
```

For live:

```bash
kubectl config use-context live.cloud-platform.service.justice.gov.uk
```

## Where to go from here?

Now that you've setup `kubectl`, you might want to look at this handy [cheatsheet][kubectl-cheatsheet].

Once you are ready to deploy applications you will need to [create a namespace] first.

[kubectl-install]: https://kubernetes.io/docs/tasks/tools/install-kubectl
[OAuth2]: https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2
[OIDC]: https://kubernetes.io/docs/reference/access-authn-authz/authentication/#openid-connect-tokens
[Auth0]: https://www.auth0.com
[Kuberos]: https://github.com/negz/kuberos
[kubectl-cheatsheet]: https://kubernetes.io/docs/reference/kubectl/cheatsheet/
[github-sso]: https://github.com/orgs/ministryofjustice/sso
[create a namespace]: /documentation/getting-started/env-create.html
[the infrastructure repository]: https://github.com/ministryofjustice/cloud-platform-infrastructure/blob/main/kops/live-1.yaml#L254
[authenticate-to-live-cluster]: https://login.live.cloud-platform.service.justice.gov.uk
[kubectl-merge]: https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#merging-kubeconfig-files
[migrate-to-live]: /documentation/other-topics/migrate-to-live.html#migrate-to-the-quot-live-quot-cluster
