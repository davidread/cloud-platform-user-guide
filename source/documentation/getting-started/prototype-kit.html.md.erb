---
title: Create a GOV.UK Prototype Kit site
last_reviewed_on: 2021-08-19
review_in: 3 months
---

# <%= current_page.data.title %>

The cloud platform makes it easy to set up and host a [GOV.UK Prototype Kit]
website.

This guide will walk you through the process.

## Pre-requisites

To complete the steps in this guide, you will need:

* To be a member of at least one GitHub team in the [MoJ GitHub Organisation]
* The [Cloud Platform CLI] installed
* A local development environment including a terminal and a git client

## 1. Clone the `environments` repository

To create resources on the Cloud Platform, you need to raise a pull request
against the [cloud-platform-environments] repository.

Start by checking out a copy of the repository:

```bash
$ git clone git@github.com:ministryofjustice/cloud-platform-environments.git
$ cd cloud-platform-environments
```

## 2. Create your prototype kit site

To create your prototype kit site, run:

```bash
$ cloud-platform environment prototype create
```

You will be asked several questions, the most important of which is the name of
your prototype kit project.

This name will be used as:

* The name of the [namespace] which will be created on the cloud platform
* The name of the GitHub repository which will be created, and which will
contain your prototype kit source code
* The hostname of your prototype kit website

> You must ensure that there is not already a namespace or github repository
with this name

For example, if you choose `my-prototype` as the name, you will create:

* A namespace on the Cloud Platform called `my-prototype`
* The github repository `https://github.com/ministryofjustice/my-prototype`

...and your prototype kit website will be available at the URL:

```
https://my-prototype.apps.live.cloud-platform.service.justice.gov.uk
```

## 3. Raise a PR

After you have answered all the questions, the cloud-platform CLI will create
several files in a folder called:

```
namespaces/live.cloud-platform.service.justice.gov.uk/[name you chose]
```

Create a new branch, `git add` the new folder and then raise a pull request.

Once a member of the Cloud Platform team has approved your PR, merge it.

When you merge the PR, the [Apply Pipeline](/documentation/other-topics/apply-pipeline.html)
will create your namespace and github repository. The github repository has a
deployment workflow, implemented as a [GitHub Actions] workflow, which will
continuously deploy any changes made to the `main` branch of the repository.

## Caveats

There are a few things to be aware of, concerning your prototype kit site:

* The deployment workflow usually takes around 5 minutes to run

* The very first run of the deployment workflow will fail. This is because the
github repository (and its deployment workflow) has to be created before some
of the resources the workflow depends on.  You can use the "re-run" button in
the GitHub web interface, and the action should succeed.

![GitHub Actions re-run button](/images/github-actions-rerun-button.png)

> You don't have to do this - when you push changes to the repository, they
will be deployed successfully - but you may want to confirm that your site
works before making any changes.

* The GitHub repository is created with [branch protection] applied to the
default `main` branch. If you don't want this, edit the `github-repo.tf` file
in your namespace folder in the environments repository, and remove this
stanza:

```hcl
resource "github_branch_protection" "default" {
  repository_id          = github_repository.prototype.id
  pattern                = "main"
  enforce_admins         = true
  require_signed_commits = true
}
```

> If you use the GitHub UI to disable branch protection, the [Apply Pipeline](/documentation/other-topics/apply-pipeline.html) will re-enable it shortly afterwards.
>
> The only way to permanently disable it is to remove it from the terraform
source code.

## Deleting your Prototype Kit site

When you no longer need your prototype kit site, you can delete it as follows:

1. Raise a PR removing your namespace folder from the
`cloud-platform-environments` repository, and wait for it to be approved by a
member of the Cloud Platform team

1. **Immediately before you merge the PR** use the GitHub web interface to
delete your repository

1. Merge the PR

> The [Apply Pipeline](/documentation/other-topics/apply-pipeline.html) has the GitHub privileges required to
**create** repositories, but not to **delete** them. This is a deliberate
safety feature.

Shortly after you merge the PR, your namespace will be removed from the Cloud
Platform.

[GOV.UK Prototype Kit]: https://govuk-prototype-kit.herokuapp.com/docs
[MoJ GitHub Organisation]: https://github.com/ministryofjustice/
[Cloud Platform CLI]: ./cloud-platform-cli.html
[cloud-platform-environments]: https://github.com/ministryofjustice/cloud-platform-environments
[namespace]: ./env-create.html
[GitHub Actions]: https://github.com/features/actions
[race condition]: https://www.techopedia.com/definition/10313/race-condition
[branch protection]: https://docs.github.com/en/github/administering-a-repository/about-protected-branches
